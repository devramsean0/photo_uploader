name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'Version to release as'
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  sanity-build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Native Deps
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev libexif-dev pkg-config
    - uses: actions/checkout@v4
    - name: Download Build Cache
      uses: actions/cache@v4.2.3
      with:
        path: target/
        key: release-sanitybuild-rs-build-cache
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test
  setup-release:
    needs: sanity-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust Components
      run: rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt
    - name: Bump Cargo Version
      run: |
        current_version=$(grep '^version = ' "Cargo.toml" | head -n1 | cut -d '"' -f2)
        echo "Changing version from $current_version to ${{ inputs.version}}"
        sed -i "s/^version  = \".*\"/version = \"${{ inputs.version }}\"/" "Cargo.toml"
    - name: Format Project
      run: cargo fmt --all
    - name: Commit Changes
      run: |
        git config --local user.name "Sean's Automation[bot]"
        git config --local user.email "automation@sean.cyou"
        git add --all
        git commit -m "[SKIP-CI] Prepare release ${{ inputs.version }}"
    - name: Push Changes
      run: |
        git tag -a ${{ inputs.version }} -m "Automated Release ${{ inputs.version}}"
        git push --tags
    - name: Create Release'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ inputs.version }}
        name: CLI release ${{ inputs.version }}
        draft: true
  build-release:
    needs: setup-release
    strategy:
      matrix:
        os:
        - ubuntu-24.04
        - windows-latest
        - ubuntu-24.04-arm
        - windows-11-arm
        - macos-13
        - macos-latest
        arch:
          - x64
          - arm64
        exclude:
          - os: windows-latest
            arch: arm64
          - os: windows-11-arm
            arch: x64
          - os: ubuntu-24.04
            arch: arm64
          - os: ubuntu-24.04-arm
            arch: x64
          - os: macos-13
            arch: arm64
          - os: macos-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Native Deps (Ubuntu)
      if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-24.04-arm'
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev libexif-dev pkg-config
    - name: Set up Native Deps (MacOS)
      if: matrix.os == 'macos-13' || matrix.os == 'macos-latest'
      run: |
        curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
        brew install libexif pkg-config
    - name: Set up Native Deps (Windows)
      if: matrix.os == 'windows-latest' || matrix.os == 'windows-11-arm'
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        choco install pkgconfiglite --accept-license --yes
    - name: Setup Rust Toolchain
      if: matrix.os == 'windows-latest' || matrix.os == 'windows-11-arm'
      uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Download Build Cache
      uses: actions/cache@v4.2.3
      with:
        path: target/
        key: release-build-${{ matrix.os }}-rs-build-cache
    - name: Build
      run: cargo build --release
    - name: Rename File (Linux)
      if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-24.04-arm'
      run: mv target/release/photo_uploader target/release/photo_uploader-linux-${{ matrix.arch }}
    - name: Rename File (MacOS)
      if: matrix.os == 'macos-13' || matrix.os == 'macos-latest'
      run: mv target/release/photo_uploader target/release/photo_uploader-macos-${{ matrix.arch }}
    - name: Rename File (Linux)
      if: matrix.os == 'windows-latest' || matrix.os == 'windows-11-arm'
      run: mv target/release/photo_uploader.exe target/release/photo_uploader-windows-${{ matrix.arch }}.exe
    - name: Upload Artifact (Linux)
      if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-24.04-arm'
      uses: actions/upload-artifact@v4
      with:
        name: build-linux-${{ matrix.arch }}
        path: target/release/photo_uploader-linux-${{ matrix.arch }}
    - name: Upload Artifact (MacOS)
      if: matrix.os == 'macos-13' || matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: build-macos-${{ matrix.arch }}
        path: target/release/photo_uploader-macos-${{ matrix.arch }}
    - name: Upload Artifact (Windows)
      if: matrix.os == 'windows-latest' || matrix.os == 'windows-11-arm'
      uses: actions/upload-artifact@v4
      with:
        name: build-windows-${{ matrix.arch }}
        path: target/release/photo_uploader-windows-${{ matrix.arch }}.exe
    